;Abigail Stroh
;4/4/19
;Lab 4
;I2C Master Code


            INCLUDE 'derivative.inc'
            XDEF _Startup, main, _Viic, key_press
            XREF __SEG_END_SSTACK 
            
		ORG $0060
		FullKeypad:	DS.B 1 
		IIC_addr:	DS.B 1 
		msgLength:	DS.B 1 
		current:	DS.B 1 
		IIC_msg:	DS.B 1 
		Column:	 	DS.B 1 
		Row:		DS.B 1
		sendCheck:	DS.B 1
		Press:		DS.B 1
		Press2:		DS.B 1
		Temp:		DS.B 1
		Vtemp25:	DS.B 1
		Slope_high:	DS.B 1
		Slope_low:	DS.B 1
		Const:		DS.B 1
		Const2:		DS.B 1
		Temporary:	DS.B 1
		Check:		DS.B 1
		Mid:		DS.B 1


		ORG $E000

main:
	_Startup:
				LDHX #__SEG_END_SSTACK
				
				LDA #$00
				STA PTAPE
	
				; Disable Watchdawg
				LDA SOPT1 
				AND #%01111111
				STA SOPT1
				
				; Set I2C pins
				LDA SOPT2
				ORA #%00000010
				STA SOPT2

				; Slave address	
				MOV #$10, IIC_addr
				
				; Columns are inputs
				LDA #$F0
				AND PTADD
				STA PTADD

				; Rows are outputs
				LDA #$3C 
				ORA PTBDD 
				STA PTBDD

				; Rising edge sensitive
				LDA #$0F
				STA KBIES
				
				LDA #$0F
				STA KBIPE
				
				BSET KBISC_KBIE, KBISC
				
				LDA #1
				STA sendCheck
				
				; set PTB0 pin as input for temp sensor
				LDA #%00010000
				STA APCTL1
				
				;setting up A to D communication
				LDA #%00000000
				STA ADCCFG
				
				LDA #%00011010
				STA ADCSC1
				
				;setting variable values
				LDA #$36
				STA Vtemp25
				
				LDA #$B
				STA Slope_low
				
				LDA #$D
				STA Slope_high
				
				LDA #$59
				STA Const
				
				LDA #$19
				STA Const2
				
				LDA #0
				STA Temporary

				TXS
				CLI
				
				JSR IIC_Startup_Master
			
*--------------------------------------------------------------			         

	mainLoop: 
				LDA #$00
				STA Temp
		
				LDA #%00010000 
				STA Row
				BSET 2, PTBD
				JSR Delay
				BCLR 2, PTBD 
				
				LDA #%00100000
				STA Row
				BSET 3, PTBD 
				JSR Delay
				BCLR 3, PTBD 

				LDA #%01000000
				STA Row
				BSET 4, PTBD 
				JSR Delay
				BCLR 4, PTBD
				
				LDA #%10000000
				STA Row
				BSET 5, PTBD 
				JSR Delay
				BCLR 5, PTBD
				
				
				LDA sendCheck
				BNE EndLoop
			
				LDA #1
				STA sendCheck

				LDA #1
				STA msgLength
				
			
				JSR IIC_DataWrite

				EndLoop:
				BRA mainLoop

	
*-----------------------------------------------------------------	
	
*----Actual interrupt start----
_Viic:
				;Clear interrupt
				BSET IICS_IICIF, IICS
				
				;Check if master
				BRSET IICC_MST, IICC, _Viic_master ;Yes, should never need to be a slave
				
				JSR Delay
				JSR Delay
				
				RTI

*----Check if transfer or recieve----
_Viic_master:
				BRSET IICC_TX, IICC, _Viic_master_TX ;For transfer
				BRA _Viic_master_RX ;For recieve

*----Transmit data----
_Viic_master_TX: 
				;Not last byte
				LDA msgLength
				SUB current
				BNE _Viic_master_rxAck 
				
				;Is last byte
				BCLR IICC_MST, IICC
				BSET IICS_ARBL, IICS ;Arbitration lost, no code made for recovery
				
				RTI

*----Check for acknowledge----
_Viic_master_rxAck: 
				;Ack from slave recieved
				BRCLR IICS_RXAK, IICS, _Viic_master_EoAC
				BRA _Viic_master_EoAC
				;No ack from slave recieved
				BCLR IICC_MST, IICC
				
				RTI

*----End of address cycle, check for receive or write data---
_Viic_master_EoAC:
				LDA IIC_addr
				AND #%0000001
				BNE _Viic_master_toRxMode
					
				LDA IIC_msg
				STA IICD
					
				LDA current
				INCA
				STA current
					
				RTI

*----Dummy read----
_Viic_master_toRxMode: 
				;Dummy read for EoAC
				BCLR IICC_TX, IICC
				LDA IICD
				RTI

*----Recieve data----
_Viic_master_RX: 
				;Last byte to be read
				LDA msgLength
				SUB current
				BEQ _Viic_master_rxStop
				
				;2nd to last byte to be read
				INCA
				BEQ _Viic_master_txAck
				
				BRA _Viic_master_readData

*----Stop condition----
_Viic_master_rxStop:
				;Send stop bit
				BCLR IICC_MST, IICC
				BRA _Viic_master_readData

*----Acknowledge----
_Viic_master_txAck: 
				;Transfer acknowledge
				BSET IICC_TXAK, IICC
				BRA _Viic_master_readData
					
*----Read and store data----
_Viic_master_readData: 
				;Read byte from IICD and store into IIC_msg
				CLRH
				LDX current
				
				;Store messafe into indexed location
				LDA IICD
				STA IIC_msg, X
				
				;Increment current
				LDA current
				INCA
				STA current
				
				RTI

*----Initial configuration
IIC_Startup_Master: 
				;Set baud rate to 50kbps
				LDA #%10000111
				STA IICF
					
				;Enable IIC and Interrupts
				BSET IICC_IICEN,IICC
				BSET IICC_IICIE,IICC
				RTS
					

*----Initiate a transfer----
IIC_DataWrite:
				;Initialize current
				LDA #0 
				STA current
				
				BSET 5, IICC ;Set master mode
				BSET IICC_TX, IICC ;Set transmit
				
				LDA IIC_addr ;Send slave address
				STA IICD
				
				RTS 

Delay: ;General purpose delay
				LDA #255
				LOOP:
				DECA
				BNE LOOP
				RTS
key_press:
				BSET KBISC_KBACK, KBISC		
				
				LDA PTAD
				STA Column
				
				LDA Row
				ADD Column
				STA IIC_msg
				STA Press
				STA Press2
				
				CBEQA #$68,one_press
				CBEQA #$64,two_press
				
				BRA continue2
				LDA #$00
				STA sendCheck
				RTI
			
one_press:
		LDA #1
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		LDA ADCRL	
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high
		
		CLRH
		LDA Check
		LDX Slope_low
		DIV
		STA Temp	

		SUB #$4
		STA Temp	
				
		LDA Const2		
		SUB Temp
		STA IIC_msg

		LDA #$00
		STA sendCheck
		RTI
two_press:
		LDA #2
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop2:
		LDA Press
		BEQ End2
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop2
		
		End2:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
		
continue2:
		CBEQA #$62,three_press
		CBEQA #$A8,four_press
				
		BRA passer_by
		LDA #$00
		STA sendCheck
		RTI
slope_high:
		CLRH
		LDA Check
		LDX Slope_high
		DIV
		STA Temp	

		SUB #$4
		STA Temp	
				
		LDA Const2		
		SUB Temp
		STA IIC_msg
		
		LDA #$00
		STA sendCheck
		RTI
three_press:
		LDA #3
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop3:
		LDA Press
		BEQ End
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop3
		
		End:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
passer_by:
		BRA giant
		LDA #$00
		STA sendCheck
		RTI
four_press:
		LDA #4
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop4:
		LDA Press
		BEQ End4
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop4
		
		End4:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
giant:
		BRA receiver
		LDA #$00
		STA sendCheck
		RTI
five_press:
		LDA #5
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop5:
		LDA Press
		BEQ End5
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high2
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop5
		
		End5:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
receiver:
		CBEQA #$A4,five_press
		CBEQA #$A2,six_press
		BRA continue
		LDA #$00
		STA sendCheck
		RTI
slope_high2:
		CLRH
		LDA Check
		LDX Slope_high
		DIV
		STA Temp	

		SUB #$4
		STA Temp	
				
		LDA Const2		
		SUB Temp
		STA IIC_msg
		
		LDA #$00
		STA sendCheck
		RTI		
six_press:
		LDA #6
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop6:
		LDA Press
		BEQ End6
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high2
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop6
		
		End6:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
continue:
		CBEQA #$48,seven_press
		CBEQA #$44,eight_press
		BRA final			
		LDA #$00
		STA sendCheck
		RTI
middle_man:
		BRA slope_high2
seven_press:
		LDA #7
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop7:
		LDA Press
		BEQ End7
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI middle_man
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop7
		
		End7:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
final:
		CBEQA #$42,nine_press
		LDA #$00
		STA sendCheck
		RTI
eight_press:
		LDA #8
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop8:
		LDA Press
		BEQ End8
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high3
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop8
		
		End8:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
nine_press:
		LDA #9
		STA Press
		STA Press2
		
		LDA #0
		STA Temporary
		
		Loop9:
		LDA Press
		BEQ End9
		
		LDA ADCRL
		STA Check
		
		LDA Check
		CMP Const
		BHI slope_high3
		
		CLRH
		LDA Check
		LDX Slope_low	
		DIV		
		STA Temp	
			
		SUB #$4	
		STA Temp		
				
		LDA Const2		
		SUB Temp	
		STA Temp
		
		LDA Temporary
		ADD Temp
		STA Temporary
		
		LDA Press
		SUB #1
		STA Press
		
		BRA Loop9
		
		End9:
		CLRH
		LDA Temporary
		LDX Press2
		DIV
		
		STA IIC_msg
		LDA #$00
		STA sendCheck
		RTI
slope_high3:
		CLRH
		LDA Check
		LDX Slope_high
		DIV
		STA Temp	

		SUB #$4
		STA Temp	
				
		LDA Const2		
		SUB Temp
		STA IIC_msg
		
		LDA #$00
		STA sendCheck
		RTI		
